# Dear Github Actions
#   well, you know what, FUCK AUTOMATION! FUCK TESTING! AND FUCK YOOUU!!
#   I wish I could neo fucking tribeam you
name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - 'app/**'
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - 'app/**'
      - '**.md'
      - 'docs/**'

env:
  BUILD_TYPE: Release
  c_compiler: gcc
  cpp_compiler: g++
  config_preset: release-default
  generator: "Ninja"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Install required dependencies including Ninja
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ninja-build \
            ccache

      # Set up ccache - this is the most important cache for speed
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-ccache-${{ hashFiles('**/*.cpp', '**/*.h', '**/*.hpp') }}
          max-size: 1G  # Reduced to save space

      # Cache vcpkg packages
      - name: Cache vcpkg installed
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/build/vcpkg_installed
          key: ${{ runner.os }}-vcpkg-installed-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-installed-

      - name: Configure CMake
        run: >
          cmake --preset ${{ env.config_preset }} -B ${{ github.workspace }}/build 
          -G "${{ env.generator }}"
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -DCMAKE_C_COMPILER=${{ env.c_compiler }}
          -DCMAKE_CXX_COMPILER=${{ env.cpp_compiler }}
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          -DCMAKE_C_COMPILER_LAUNCHER=ccache
          -DVCPKG_FEATURE_FLAGS=binarycaching
          -DBUILD_TESTS_ONLY=on

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel $(nproc)

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}} --parallel $(nproc) --output-on-failure
